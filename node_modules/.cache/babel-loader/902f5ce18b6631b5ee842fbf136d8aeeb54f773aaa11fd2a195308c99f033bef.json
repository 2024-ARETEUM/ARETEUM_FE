{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Likelion\\\\ARETEUM_FE\\\\src\\\\pages\\\\TimeTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as TT from \"../styles/StyledTimeTable\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeTable = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // 이미지 상태 관리\n  const [isClicked1001, setIsClicked1001] = useState(true); // 처음에는 Clicked1001.svg로 설정\n  const [isClicked1002, setIsClicked1002] = useState(false); // 처음에는 unClicked1002.svg로 설정\n\n  // 날짜 상태 관리\n  const [activeDate, setActiveDate] = useState(\"1001\");\n\n  // Boothlist의 top 값을 관리하기 위한 상태\n  const [boothTop, setBoothTop] = useState(\"370px\"); // 기본값은 1001에 맞춰 설정\n\n  // height 값을 관리하는 상태\n  const [dynamicHeight, setDynamicHeight] = useState(\"auto\"); // 기본적으로 auto로 설정\n\n  // 이미지 클릭 핸들러\n  const handleClick1001 = () => {\n    setActiveDate(\"1001\"); // 1001 클릭 시 해당 날짜를 active로 설정\n    setIsClicked1001(true); // 1001 클릭 시 true\n    setIsClicked1002(false); // 1002는 false로\n    setBoothTop(\"400px\"); // Boothlist의 top을 370px로 설정\n  };\n  const handleClick1002 = () => {\n    setActiveDate(\"1002\"); // 1002 클릭 시 해당 날짜를 active로 설정\n    setIsClicked1001(false); // 1001은 false로\n    setIsClicked1002(true); // 1002 클릭 시 true\n    setBoothTop(\"450px\"); // Boothlist의 top을 600px로 설정\n  };\n  const goback = () => {\n    navigate(`/`);\n  };\n\n  // 부스 데이터\n  const boothData = [{\n    name: \"<달 골짜기 타로 가게>\",\n    time: \"15:00-19:00\",\n    info: \"(사전 예약제)\",\n    type: \"부스\",\n    date: \"1001\"\n  }, {\n    name: \"주점 부스 운영\",\n    time: \"16:00-22:00\",\n    info: \"(일부 주점 12시부터 운영)\",\n    type: \"부스\",\n    date: \"1001\"\n  }, {\n    name: \"버스킹 <솜솜어게인>\",\n    time: \"19:00-21:00\",\n    info: \"\",\n    type: \"공연\",\n    date: \"1001\"\n  }, {\n    name: \"ㅌㅅㅌ\",\n    time: \"10:00-11:00\",\n    info: \"불꽃놀이 공연\",\n    type: \"부스\",\n    date: \"1002\"\n  }, {\n    name: \"맹구\",\n    time: \"12:00-15:00\",\n    info: \"콧물돌리기\",\n    type: \"공연\",\n    date: \"1002\"\n  }, {\n    name: \"똥꼬쇼\",\n    time: \"16:00-20:00\",\n    info: \"불타는똥꼬쇼\",\n    type: \"공연\",\n    date: \"1002\"\n  }, {\n    name: \"도망치는도련님\",\n    time: \"20:00-22:00\",\n    info: \"딱대~\",\n    type: \"부스\",\n    date: \"1002\"\n  }];\n\n  // 현재 선택된 날짜에 맞는 부스 필터링\n  const filteredBooths = boothData.filter(booth => booth.date === activeDate);\n\n  // useEffect를 사용해 부스 개수에 따른 height 계산\n  useEffect(() => {\n    const baseHeight = 370; // 기본 높이\n    const addedHeight = filteredBooths.length * 10; // 부스 하나당 추가할 높이(예: 50px씩 추가)\n    setDynamicHeight(`${baseHeight + addedHeight}px`); // 적당히 높이 증가\n  }, [filteredBooths]);\n  return /*#__PURE__*/_jsxDEV(TT.Container, {\n    children: [/*#__PURE__*/_jsxDEV(TT.Header, {\n      children: [/*#__PURE__*/_jsxDEV(TT.Back, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"back\",\n          src: `${process.env.PUBLIC_URL}/images/Backbtn.svg`,\n          alt: \"back\",\n          onClick: goback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TT.Title, {\n        children: \"\\uD0C0\\uC784\\uD14C\\uC774\\uBE14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TT.Background, {\n      children: /*#__PURE__*/_jsxDEV(\"object\", {\n        data: `${process.env.PUBLIC_URL}/images/TTBack.svg`,\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TT.Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(TT.Date, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"1001\",\n          src: `${process.env.PUBLIC_URL}/images/${isClicked1001 ? \"Clicked1001.svg\" : \"unClicked1001.svg\"}`,\n          alt: \"1001\",\n          onClick: handleClick1001,\n          className: isClicked1001 ? \"active\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"1002\",\n          src: `${process.env.PUBLIC_URL}/images/${isClicked1002 ? \"Clicked1002.svg\" : \"unClicked1002.svg\"}`,\n          alt: \"1002\",\n          onClick: handleClick1002,\n          className: isClicked1002 ? \"active\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TT.Table, {\n        children: [/*#__PURE__*/_jsxDEV(TT.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"title\",\n            children: \"\\uBD80\\uC2A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"line1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TT.Center, {\n          style: {\n            height: dynamicHeight\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TT.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"title\",\n            children: \"\\uACF5\\uC5F0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"line2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TT.Boothlist, {\n          style: {\n            top: boothTop,\n            // 상태로 관리되는 top 값 사용\n            height: dynamicHeight\n          },\n          children: filteredBooths.map((booth, index) => /*#__PURE__*/_jsxDEV(TT.Booth, {\n            type: booth.type,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"top\",\n                type: booth.type,\n                children: booth.type === \"부스\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    id: \"time\",\n                    children: booth.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    id: \"arrow\",\n                    type: booth.type,\n                    src: `${process.env.PUBLIC_URL}/images/${booth.type === \"부스\" ? \"boothArrow.svg\" : \"performanceArrow.svg\"}`,\n                    alt: booth.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    id: \"arrow\",\n                    type: booth.type,\n                    src: `${process.env.PUBLIC_URL}/images/${booth.type === \"부스\" ? \"boothArrow.svg\" : \"performanceArrow.svg\"}`,\n                    alt: booth.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    id: \"time\",\n                    children: booth.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"bottom\",\n                type: booth.type,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"name\",\n                  children: booth.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"info\",\n                  children: booth.info\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TT.SomSom, {\n        children: /*#__PURE__*/_jsxDEV(\"object\", {\n          id: \"somsom\",\n          data: `${process.env.PUBLIC_URL}/images/SomSom.svg`,\n          alt: \"somsom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TT.TextBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"title\",\n          children: \"12:00-22:00 \\uC0C1\\uC2DC \\uC6B4\\uC601 \\uBD80\\uC2A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"booth\",\n          children: [\"\\uB180\\uB7EC\\uC640\\uC694 \\uB3C4\\uB2F4\\uC774\\uB124(~22\\uC2DC)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), \" \\uC624\\uB298 \\uBC24\\uC740 \\uC5EC\\uAE30 \\u2018\\uB85C\\uD0C0\\u2019 / \\uBD88\\uAF43\\uD53C\\uC6C0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), \"\\uB098\\uB780 \\uB3CC\\uC1E0\\uC758 \\uB9C8\\uB2D8 \\uD658\\uC601\\uD68C / \\uD654\\uD559\\uACFC \\uC8FC\\uC810\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), \"\\uBC24\\uD558\\uB298\\uC744 \\uC3D8\\uB2E4 / \\uAD6D\\uACBD \\uC5C6\\uB294 \\uBC14(BAR)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), \"\\uD5E4\\uC5B4\\uC9C0\\uC790\\uACE0? \\uB9C1\\uD06C \\uC8FC\\uC810 \\uC774\\uC81C \\uC2DC\\uC791\\uC778\\uB370?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TT.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"object\", {\n        data: `${process.env.PUBLIC_URL}/images/Footer.svg`,\n        alt: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeTable, \"4NgpuKT0JbRvDTqw0y1+QWYSXFE=\", false, function () {\n  return [useNavigate];\n});\n_c = TimeTable;\nexport default TimeTable;\nvar _c;\n$RefreshReg$(_c, \"TimeTable\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TT","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeTable","_s","navigate","isClicked1001","setIsClicked1001","isClicked1002","setIsClicked1002","activeDate","setActiveDate","boothTop","setBoothTop","dynamicHeight","setDynamicHeight","handleClick1001","handleClick1002","goback","boothData","name","time","info","type","date","filteredBooths","filter","booth","baseHeight","addedHeight","length","Container","children","Header","Back","id","src","process","env","PUBLIC_URL","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Title","Background","data","Wrap","Date","className","Table","Menu","Center","style","height","Boothlist","top","map","index","Booth","SomSom","TextBox","Footer","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Likelion/ARETEUM_FE/src/pages/TimeTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as TT from \"../styles/StyledTimeTable\";\r\n\r\nconst TimeTable = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // 이미지 상태 관리\r\n  const [isClicked1001, setIsClicked1001] = useState(true); // 처음에는 Clicked1001.svg로 설정\r\n  const [isClicked1002, setIsClicked1002] = useState(false); // 처음에는 unClicked1002.svg로 설정\r\n\r\n  // 날짜 상태 관리\r\n  const [activeDate, setActiveDate] = useState(\"1001\");\r\n\r\n  // Boothlist의 top 값을 관리하기 위한 상태\r\n  const [boothTop, setBoothTop] = useState(\"370px\"); // 기본값은 1001에 맞춰 설정\r\n\r\n  // height 값을 관리하는 상태\r\n  const [dynamicHeight, setDynamicHeight] = useState(\"auto\"); // 기본적으로 auto로 설정\r\n\r\n  // 이미지 클릭 핸들러\r\n  const handleClick1001 = () => {\r\n    setActiveDate(\"1001\"); // 1001 클릭 시 해당 날짜를 active로 설정\r\n    setIsClicked1001(true); // 1001 클릭 시 true\r\n    setIsClicked1002(false); // 1002는 false로\r\n    setBoothTop(\"400px\"); // Boothlist의 top을 370px로 설정\r\n  };\r\n\r\n  const handleClick1002 = () => {\r\n    setActiveDate(\"1002\"); // 1002 클릭 시 해당 날짜를 active로 설정\r\n    setIsClicked1001(false); // 1001은 false로\r\n    setIsClicked1002(true); // 1002 클릭 시 true\r\n    setBoothTop(\"450px\"); // Boothlist의 top을 600px로 설정\r\n  };\r\n\r\n  const goback = () => {\r\n    navigate(`/`);\r\n  };\r\n\r\n  // 부스 데이터\r\n  const boothData = [\r\n    {\r\n      name: \"<달 골짜기 타로 가게>\",\r\n      time: \"15:00-19:00\",\r\n      info: \"(사전 예약제)\",\r\n      type: \"부스\",\r\n      date: \"1001\",\r\n    },\r\n    {\r\n      name: \"주점 부스 운영\",\r\n      time: \"16:00-22:00\",\r\n      info: \"(일부 주점 12시부터 운영)\",\r\n      type: \"부스\",\r\n      date: \"1001\",\r\n    },\r\n    {\r\n      name: \"버스킹 <솜솜어게인>\",\r\n      time: \"19:00-21:00\",\r\n      info: \"\",\r\n      type: \"공연\",\r\n      date: \"1001\",\r\n    },\r\n    {\r\n      name: \"ㅌㅅㅌ\",\r\n      time: \"10:00-11:00\",\r\n      info: \"불꽃놀이 공연\",\r\n      type: \"부스\",\r\n      date: \"1002\",\r\n    },\r\n    {\r\n      name: \"맹구\",\r\n      time: \"12:00-15:00\",\r\n      info: \"콧물돌리기\",\r\n      type: \"공연\",\r\n      date: \"1002\",\r\n    },\r\n    {\r\n      name: \"똥꼬쇼\",\r\n      time: \"16:00-20:00\",\r\n      info: \"불타는똥꼬쇼\",\r\n      type: \"공연\",\r\n      date: \"1002\",\r\n    },\r\n    {\r\n      name: \"도망치는도련님\",\r\n      time: \"20:00-22:00\",\r\n      info: \"딱대~\",\r\n      type: \"부스\",\r\n      date: \"1002\",\r\n    },\r\n  ];\r\n\r\n  // 현재 선택된 날짜에 맞는 부스 필터링\r\n  const filteredBooths = boothData.filter((booth) => booth.date === activeDate);\r\n\r\n  // useEffect를 사용해 부스 개수에 따른 height 계산\r\n  useEffect(() => {\r\n    const baseHeight = 370; // 기본 높이\r\n    const addedHeight = filteredBooths.length * 10; // 부스 하나당 추가할 높이(예: 50px씩 추가)\r\n    setDynamicHeight(`${baseHeight + addedHeight}px`); // 적당히 높이 증가\r\n  }, [filteredBooths]);\r\n\r\n  return (\r\n    <TT.Container>\r\n      <TT.Header>\r\n        <TT.Back>\r\n          <img\r\n            id=\"back\"\r\n            src={`${process.env.PUBLIC_URL}/images/Backbtn.svg`}\r\n            alt=\"back\"\r\n            onClick={goback}\r\n          />\r\n        </TT.Back>\r\n        <TT.Title>타임테이블</TT.Title>\r\n      </TT.Header>\r\n      <TT.Background>\r\n        <object\r\n          data={`${process.env.PUBLIC_URL}/images/TTBack.svg`}\r\n          alt=\"background\"\r\n        />\r\n      </TT.Background>\r\n      <TT.Wrap>\r\n        <TT.Date>\r\n          <img\r\n            id=\"1001\"\r\n            src={`${process.env.PUBLIC_URL}/images/${\r\n              isClicked1001 ? \"Clicked1001.svg\" : \"unClicked1001.svg\"\r\n            }`}\r\n            alt=\"1001\"\r\n            onClick={handleClick1001}\r\n            className={isClicked1001 ? \"active\" : \"\"}\r\n          />\r\n          <img\r\n            id=\"1002\"\r\n            src={`${process.env.PUBLIC_URL}/images/${\r\n              isClicked1002 ? \"Clicked1002.svg\" : \"unClicked1002.svg\"\r\n            }`}\r\n            alt=\"1002\"\r\n            onClick={handleClick1002}\r\n            className={isClicked1002 ? \"active\" : \"\"}\r\n          />\r\n        </TT.Date>\r\n        <TT.Table>\r\n          <TT.Menu>\r\n            <div id=\"title\">부스</div>\r\n            <div id=\"line1\"></div>\r\n          </TT.Menu>\r\n          <TT.Center style={{ height: dynamicHeight }}></TT.Center>\r\n          <TT.Menu>\r\n            <div id=\"title\">공연</div>\r\n            <div id=\"line2\"></div>\r\n          </TT.Menu>\r\n          <TT.Boothlist\r\n            style={{\r\n              top: boothTop, // 상태로 관리되는 top 값 사용\r\n              height: dynamicHeight,\r\n            }}\r\n          >\r\n            {filteredBooths.map((booth, index) => (\r\n              <TT.Booth key={index} type={booth.type}>\r\n                <div id=\"wrap\">\r\n                  <div id=\"top\" type={booth.type}>\r\n                    {booth.type === \"부스\" ? (\r\n                      <>\r\n                        <p id=\"time\">{booth.time}</p>\r\n                        <img\r\n                          id=\"arrow\"\r\n                          type={booth.type}\r\n                          src={`${process.env.PUBLIC_URL}/images/${\r\n                            booth.type === \"부스\"\r\n                              ? \"boothArrow.svg\"\r\n                              : \"performanceArrow.svg\"\r\n                          }`}\r\n                          alt={booth.name}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <img\r\n                          id=\"arrow\"\r\n                          type={booth.type}\r\n                          src={`${process.env.PUBLIC_URL}/images/${\r\n                            booth.type === \"부스\"\r\n                              ? \"boothArrow.svg\"\r\n                              : \"performanceArrow.svg\"\r\n                          }`}\r\n                          alt={booth.name}\r\n                        />\r\n                        <p id=\"time\">{booth.time}</p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div id=\"bottom\" type={booth.type}>\r\n                    <p id=\"name\">{booth.name}</p>\r\n                    <p id=\"info\">{booth.info}</p>\r\n                  </div>\r\n                </div>\r\n              </TT.Booth>\r\n            ))}\r\n          </TT.Boothlist>\r\n        </TT.Table>\r\n        <TT.SomSom>\r\n          <object\r\n            id=\"somsom\"\r\n            data={`${process.env.PUBLIC_URL}/images/SomSom.svg`}\r\n            alt=\"somsom\"\r\n          />\r\n        </TT.SomSom>\r\n        <TT.TextBox>\r\n          <p id=\"title\">12:00-22:00 상시 운영 부스</p>\r\n          <p id=\"booth\">\r\n            놀러와요 도담이네(~22시)\r\n            <br /> 오늘 밤은 여기 ‘로타’ / 불꽃피움\r\n            <br />\r\n            나란 돌쇠의 마님 환영회 / 화학과 주점\r\n            <br />\r\n            밤하늘을 쏘다 / 국경 없는 바(BAR)\r\n            <br />\r\n            헤어지자고? 링크 주점 이제 시작인데?\r\n          </p>\r\n        </TT.TextBox>\r\n      </TT.Wrap>\r\n\r\n      <TT.Footer>\r\n        <object\r\n          data={`${process.env.PUBLIC_URL}/images/Footer.svg`}\r\n          alt=\"footer\"\r\n        />\r\n      </TT.Footer>\r\n    </TT.Container>\r\n  );\r\n};\r\n\r\nexport default TimeTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,EAAE,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D;EACA,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,MAAM,CAAC;;EAEpD;EACA,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMqB,eAAe,GAAGA,CAAA,KAAM;IAC5BL,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IACvBJ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxBE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IACzBI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BN,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IACvBJ,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IACzBE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxBI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBb,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAMc,SAAS,GAAG,CAChB;IACEC,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEJ,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,CACF;;EAED;EACA,MAAMC,cAAc,GAAGN,SAAS,CAACO,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACH,IAAI,KAAKd,UAAU,CAAC;;EAE7E;EACAd,SAAS,CAAC,MAAM;IACd,MAAMgC,UAAU,GAAG,GAAG,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAGJ,cAAc,CAACK,MAAM,GAAG,EAAE,CAAC,CAAC;IAChDf,gBAAgB,CAAC,GAAGa,UAAU,GAAGC,WAAW,IAAI,CAAC,CAAC,CAAC;EACrD,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,oBACEzB,OAAA,CAACF,EAAE,CAACiC,SAAS;IAAAC,QAAA,gBACXhC,OAAA,CAACF,EAAE,CAACmC,MAAM;MAAAD,QAAA,gBACRhC,OAAA,CAACF,EAAE,CAACoC,IAAI;QAAAF,QAAA,eACNhC,OAAA;UACEmC,EAAE,EAAC,MAAM;UACTC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,qBAAsB;UACpDC,GAAG,EAAC,MAAM;UACVC,OAAO,EAAEvB;QAAO;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACV7C,OAAA,CAACF,EAAE,CAACgD,KAAK;QAAAd,QAAA,EAAC;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACZ7C,OAAA,CAACF,EAAE,CAACiD,UAAU;MAAAf,QAAA,eACZhC,OAAA;QACEgD,IAAI,EAAE,GAAGX,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAqB;QACpDC,GAAG,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC,eAChB7C,OAAA,CAACF,EAAE,CAACmD,IAAI;MAAAjB,QAAA,gBACNhC,OAAA,CAACF,EAAE,CAACoD,IAAI;QAAAlB,QAAA,gBACNhC,OAAA;UACEmC,EAAE,EAAC,MAAM;UACTC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,WAC5BjC,aAAa,GAAG,iBAAiB,GAAG,mBAAmB,EACtD;UACHkC,GAAG,EAAC,MAAM;UACVC,OAAO,EAAEzB,eAAgB;UACzBmC,SAAS,EAAE7C,aAAa,GAAG,QAAQ,GAAG;QAAG;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACF7C,OAAA;UACEmC,EAAE,EAAC,MAAM;UACTC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,WAC5B/B,aAAa,GAAG,iBAAiB,GAAG,mBAAmB,EACtD;UACHgC,GAAG,EAAC,MAAM;UACVC,OAAO,EAAExB,eAAgB;UACzBkC,SAAS,EAAE3C,aAAa,GAAG,QAAQ,GAAG;QAAG;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACV7C,OAAA,CAACF,EAAE,CAACsD,KAAK;QAAApB,QAAA,gBACPhC,OAAA,CAACF,EAAE,CAACuD,IAAI;UAAArB,QAAA,gBACNhC,OAAA;YAAKmC,EAAE,EAAC,OAAO;YAAAH,QAAA,EAAC;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB7C,OAAA;YAAKmC,EAAE,EAAC;UAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACV7C,OAAA,CAACF,EAAE,CAACwD,MAAM;UAACC,KAAK,EAAE;YAAEC,MAAM,EAAE1C;UAAc;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzD7C,OAAA,CAACF,EAAE,CAACuD,IAAI;UAAArB,QAAA,gBACNhC,OAAA;YAAKmC,EAAE,EAAC,OAAO;YAAAH,QAAA,EAAC;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB7C,OAAA;YAAKmC,EAAE,EAAC;UAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACV7C,OAAA,CAACF,EAAE,CAAC2D,SAAS;UACXF,KAAK,EAAE;YACLG,GAAG,EAAE9C,QAAQ;YAAE;YACf4C,MAAM,EAAE1C;UACV,CAAE;UAAAkB,QAAA,EAEDP,cAAc,CAACkC,GAAG,CAAC,CAAChC,KAAK,EAAEiC,KAAK,kBAC/B5D,OAAA,CAACF,EAAE,CAAC+D,KAAK;YAAatC,IAAI,EAAEI,KAAK,CAACJ,IAAK;YAAAS,QAAA,eACrChC,OAAA;cAAKmC,EAAE,EAAC,MAAM;cAAAH,QAAA,gBACZhC,OAAA;gBAAKmC,EAAE,EAAC,KAAK;gBAACZ,IAAI,EAAEI,KAAK,CAACJ,IAAK;gBAAAS,QAAA,EAC5BL,KAAK,CAACJ,IAAI,KAAK,IAAI,gBAClBvB,OAAA,CAAAE,SAAA;kBAAA8B,QAAA,gBACEhC,OAAA;oBAAGmC,EAAE,EAAC,MAAM;oBAAAH,QAAA,EAAEL,KAAK,CAACN;kBAAI;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC7B7C,OAAA;oBACEmC,EAAE,EAAC,OAAO;oBACVZ,IAAI,EAAEI,KAAK,CAACJ,IAAK;oBACjBa,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,WAC5BZ,KAAK,CAACJ,IAAI,KAAK,IAAI,GACf,gBAAgB,GAChB,sBAAsB,EACzB;oBACHiB,GAAG,EAAEb,KAAK,CAACP;kBAAK;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC;gBAAA,eACF,CAAC,gBAEH7C,OAAA,CAAAE,SAAA;kBAAA8B,QAAA,gBACEhC,OAAA;oBACEmC,EAAE,EAAC,OAAO;oBACVZ,IAAI,EAAEI,KAAK,CAACJ,IAAK;oBACjBa,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,WAC5BZ,KAAK,CAACJ,IAAI,KAAK,IAAI,GACf,gBAAgB,GAChB,sBAAsB,EACzB;oBACHiB,GAAG,EAAEb,KAAK,CAACP;kBAAK;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,eACF7C,OAAA;oBAAGmC,EAAE,EAAC,MAAM;oBAAAH,QAAA,EAAEL,KAAK,CAACN;kBAAI;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA,eAC7B;cACH;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACN7C,OAAA;gBAAKmC,EAAE,EAAC,QAAQ;gBAACZ,IAAI,EAAEI,KAAK,CAACJ,IAAK;gBAAAS,QAAA,gBAChChC,OAAA;kBAAGmC,EAAE,EAAC,MAAM;kBAAAH,QAAA,EAAEL,KAAK,CAACP;gBAAI;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC7B7C,OAAA;kBAAGmC,EAAE,EAAC,MAAM;kBAAAH,QAAA,EAAEL,KAAK,CAACL;gBAAI;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GArCOe,KAAK;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCV,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACX7C,OAAA,CAACF,EAAE,CAACgE,MAAM;QAAA9B,QAAA,eACRhC,OAAA;UACEmC,EAAE,EAAC,QAAQ;UACXa,IAAI,EAAE,GAAGX,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAqB;UACpDC,GAAG,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZ7C,OAAA,CAACF,EAAE,CAACiE,OAAO;QAAA/B,QAAA,gBACThC,OAAA;UAAGmC,EAAE,EAAC,OAAO;UAAAH,QAAA,EAAC;QAAoB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtC7C,OAAA;UAAGmC,EAAE,EAAC,OAAO;UAAAH,QAAA,GAAC,8DAEZ,eAAAhC,OAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,+FACN,eAAA7C,OAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,qGAEN,eAAA7C,OAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,iFAEN,eAAA7C,OAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,oGAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEV7C,OAAA,CAACF,EAAE,CAACkE,MAAM;MAAAhC,QAAA,eACRhC,OAAA;QACEgD,IAAI,EAAE,GAAGX,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAqB;QACpDC,GAAG,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEnB,CAAC;AAACzC,EAAA,CAnOID,SAAS;EAAA,QACIN,WAAW;AAAA;AAAAoE,EAAA,GADxB9D,SAAS;AAqOf,eAAeA,SAAS;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}